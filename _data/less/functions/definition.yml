- name: rgb
  desc: >
    Creates an opaque color object from decimal red, green and blue (RGB) values.
    Literal color values in standard HTML/CSS formats may also be used to define colors, for example #ff0000.
  para:
    - type: red
      desc: An integer 0-255 or percentage 0-100%
    - type: green
      desc: An integer 0-255 or percentage 0-100%
    - type: blue
      desc: An integer 0-255 or percentage 0-100%
  return: color
  example: |
    rgb(90, 129, 32) //=> #5a8120

- name: rgba
  desc: >
    Creates a transparent color object from decimal red, green, blue and alpha (RGBA) values.
  para:
    - type: red
      desc: An integer 0-255 or percentage 0-100%
    - type: green
      desc: An integer 0-255 or percentage 0-100%
    - type: blue
      desc: An integer 0-255 or percentage 0-100%
    - type: alpha
      desc: A number 0-1 or percentage 0-100%
  return: color
  example: |
    rgba(90, 129, 32, 0.5) //=>rgba(90, 129, 32, 0.5)

- name: argb
  desc: >
    Creates a hex representation of a color in #AARRGGBB format (NOT #RRGGBBAA!).
    This format is used in Internet Explorer, and .NET and Android development.
  para:
    - type: color
      desc: color object
  return: string
  example: |
    argb(rgba(90, 23, 148, 0.5)); //=>#805a1794

- name: hsl
  desc: >
    Creates an opaque color object from hue, saturation and lightness (HSL) values.
    This is useful if you want to create a new color based on another color's channel,
    forExample: @new: hsl(hue(@old), 45%, 90%);
    @new will have @old's hue, and its own saturation and lightness.
  para:
    - type: hue
      desc: An integer 0-360 representing degrees.
    - type: saturation
      desc: A percentage 0-100% or number 0-1.
    - type: lightness
      desc: A percentage 0-100% or number 0-1.
  return: color
  example: |
    hsl(90, 100%, 50%) //=>#80ff00

- name: hsla
  desc: >
    Creates a transparent color object from hue, saturation, lightness and alpha (HSLA) values.
  para:
    - type: hue
      desc: An integer 0-360 representing degrees.
    - type: saturation
      desc: A percentage 0-100% or number 0-1.
    - type: lightness
      desc: A percentage 0-100% or number 0-1.
    - type: alpha
      desc: A percentage 0-100% or number 0-1.
  return: color
  example: |
    hsl(90, 100%, 50%, 0.5) //=>rgba(128, 255, 0, 0.5)

- name: hsv
  desc: >
    Creates an opaque color object from hue, saturation and value (HSV) values.
    Note that this is a color space available in Photoshop, and is not the same as hsl
  para:
    - type: hue
      desc: An integer 0-360 representing degrees.
    - type: saturation
      desc: A percentage 0-100% or number 0-1.
    - type: value
      desc: A percentage 0-100% or number 0-1.
  return: color
  example: |
    hsv(90, 100%, 50%) //=>#408000

- name: hsva
  desc: >
    Creates a transparent color object from hue, saturation, value and alpha (HSVA) values.
    Note that this is not the same as hsla, and is a color space available in Photoshop.
  para:
    - type: hue
      desc: An integer 0-360 representing degrees.
    - type: saturation
      desc: A percentage 0-100% or number 0-1.
    - type: value
      desc: A percentage 0-100% or number 0-1.
    - type: alpha
      desc: A percentage 0-100% or number 0-1.
  return: color
  example: |
    hsva(90, 100%, 50%, 0.5) //=>rgba(64, 128, 0, 0.5)
